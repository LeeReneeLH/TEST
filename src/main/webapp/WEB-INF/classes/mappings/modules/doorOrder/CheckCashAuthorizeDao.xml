<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coffer.businesses.modules.doorOrder.v01.dao.CheckCashAuthorizeDao">
	<sql id="checkCashAuthorizeColumns">
		a.id AS "id",
		a.office_id AS "officeId",
		a.amount AS "amount",
		a.is_use AS "isUse",
		a.type AS "type",
		a.office_type AS "officeType",
		a.expression_type AS "expressionType",
		a.create_by AS "createBy.id",
		a.create_name AS "createName",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_name AS "updateName",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.authorize_rank AS "authorizeRank"
	</sql>
	
	<select id="findList" resultType="CheckCashAuthorize">
		SELECT 
			<include refid="checkCashAuthorizeColumns"/>
		FROM check_cash_authorize a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="id != null and id != ''">
				AND a.id = #{id }
			</if>
			<if test="officeId != null and officeId !=''">
				AND a.office_id = #{officeId }
			</if>
			<if test="amount != null and amount != ''">
				AND a.amount = #{amount}
			</if>
			<if test="isUse != null and isUse != ''">
				AND a.is_use = #{isUse}
			</if>
			<if test="type !=null and type != ''">
				AND a.type = #{type} 
			</if>
			<if test="officeType != null and officeType != ''">
				AND a.office_type = #{officeType}
			</if>
			<if test="expressionType != null and expressionType != ''">
				AND a.expression_type = #{expressionType}
			</if>
			<if test="searchDateStart != null and searchDateStart != ''">
	            AND 
	            <if test="dbName == 'oracle'">TO_CHAR(a.CREATE_DATE, 'yyyy-mm-dd hh24:mi:ss') >= '${searchDateStart}'</if>
				<if test="dbName=='mysql'">DATE_FORMAT(a.CREATE_DATE, '%Y-%m-%d %H:%i:%s') >='${searchDateStart}'</if>
	        </if>
	        <if test="searchDateEnd != null and searchDateEnd != ''">
	            AND
	            <if test="dbName == 'oracle'">'${searchDateEnd}' >= TO_CHAR(a.CREATE_DATE, 'yyyy-mm-dd hh24:mi:ss')</if>
				<if test="dbName=='mysql'"> '${searchDateEnd}'>=DATE_FORMAT(a.CREATE_DATE, '%Y-%m-%d %H:%i:%s')</if>
	        </if>
	        ${sqlMap.dsf}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="getAuthorizeList" resultType="CheckCashAuthorize">
		SELECT
		<include refid="checkCashAuthorizeColumns" />
		,o.name AS "officeName"
		FROM CHECK_CASH_AUTHORIZE a
		left join SYS_OFFICE o on a.office_id = o.id
		and o.del_flag = #{DEL_FLAG_NORMAL}
		<where>
		a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="officeId != null and officeId != '' ">
	    and a.office_id = #{officeId}
        </if>
		<if test="isUse != null and isUse != '' ">
	    and a.is_use = #{isUse}
        </if>
        <if test="type != null and type != '' ">
	    and a.type = #{type}
        </if>
        <if test="amount != null and amount != '' ">
	    and a.amount = #{amount}
        </if>
        <if test="officeType != null and officeType != '' ">
	    and a.office_type = #{officeType}
        </if>
        <if test="searchDateStart != null and searchDateStart != ''">
        and
        <if test="dbName == 'oracle'">TO_CHAR(a.CREATE_DATE, 'yyyy-mm-dd hh24:mi:ss') >= '${searchDateStart}'</if>
	    <if test="dbName=='mysql'">DATE_FORMAT(a.CREATE_DATE, '%Y-%m-%d %H:%i:%s') >='${searchDateStart}'</if>
	    </if>
	    <if test="searchDateEnd != null and searchDateEnd != ''">
	    and
	    <if test="dbName == 'oracle'">'${searchDateEnd}' >= TO_CHAR(a.CREATE_DATE, 'yyyy-mm-dd hh24:mi:ss')</if>
		<if test="dbName=='mysql'"> '${searchDateEnd}'>=DATE_FORMAT(a.CREATE_DATE, '%Y-%m-%d %H:%i:%s')</if>
	    </if>
		${sqlMap.dsf}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO CHECK_CASH_AUTHORIZE(
		id,
		office_id,
		amount,
		is_use,
		type,
		office_type,
		expression_type,
		create_by,
		create_name,
		create_date,
		update_by,
		update_name,
		update_date,
		del_flag,
		authorize_rank
		) VALUES (
		#{id},
		#{officeId},
		#{amount},
		#{isUse},
		#{type},
		#{officeType},
		#{expressionType},
		#{createBy.id},
		#{createName},
		#{createDate},
		#{updateBy.id},
		#{updateName},
		#{updateDate},
		#{delFlag},
		#{authorizeRank}
		
		)
	</insert>
	
	
	<!-- 主键查询，记录取得-->
	<select id="get" resultType="CheckCashAuthorize">
		SELECT
			 <include refid="checkCashAuthorizeColumns"/>,tab.name AS "officeName"
		FROM CHECK_CASH_AUTHORIZE a  
		left join SYS_OFFICE tab on a.office_id = tab.id
        WHERE a.id = #{id}
	</select>
	
	<!-- 数据更新-->
	<update id="update">
		UPDATE CHECK_CASH_AUTHORIZE set 
			office_id = #{officeId},
			amount = #{amount},
			is_use = #{isUse},
			type = #{type},
			office_type = #{officeType},
			expression_type = #{expressionType},
			create_by = #{createBy.id},
			create_name = #{createName},
			create_date = #{createDate},
			update_by = #{updateBy.id},
			update_name = #{updateName},
			update_date = #{updateDate},
			
			authorize_rank = #{authorizeRank}
		WHERE id = #{id}
	</update>

	<delete id="delete">
	 delete  from  CHECK_CASH_AUTHORIZE  where id = #{id}
	</delete>
	
	<!-- add ZXK 获取机构相关权限列表  2020-5-20 -->
	<select id="getListByTypeAndOffice" resultType="CheckCashAuthorize">
		SELECT 
			<include refid="checkCashAuthorizeColumns"/>
		FROM check_cash_authorize a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.is_use = '0'
			<if test="lists != null and lists.size != 0">
				AND a.OFFICE_ID in 
				<foreach collection="lists" item="office" separator="," open="(" close=")" index="index">
				 	 #{lists[${index}]}
				</foreach>
			</if>
			 <if test="type != null and type != '' ">
		       AND a.type = #{type}
	         </if>
		</where>	
		ORDER BY AUTHORIZE_RANK DESC 
	</select>
	<!-- 根据门店和类型获取授权信息-->
	<select id="getByIdForCheckType" resultType="CheckCashAuthorize">
		SELECT 
			<include refid="checkCashAuthorizeColumns"/>
		FROM check_cash_authorize a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.type = #{type}
			AND a.office_id = #{officeId}
		</where>	
	</select>
	
</mapper>